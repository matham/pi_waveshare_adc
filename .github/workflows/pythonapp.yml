name: Python application

on: [push, pull_request]

jobs:
  lint_test:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v1
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip virtualenv wheel setuptools
    - name: Lint with pycodestyle
      run: |
        python3 -m pip install flake8
        python3 -m flake8 . --count --ignore=E125,E126,E127,E128,E402,E741,E731,W503,F401,W504,F841 --show-source --statistics --max-line-length=80 --exclude=__pycache__,.tox,.git/,doc/

  artifacts:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v1
      with:
        python-version: 3.x
    - name: Make sdist
      run: |
        python3 -m pip install cython
        python3 setup.py sdist --formats=gztar
    - name: Run docker
      run: |
        docker build -f .ci/Dockerfile.armv7l -t pi_waveshare_adc/pi_waveshare_adc-armv7l .
        docker cp "$(docker create pi_waveshare_adc/pi_waveshare_adc-armv7l)":/pi_waveshare_adc_output .
        ls
        cp pi_waveshare_adc_output/*.whl dist/
    - name: Upload wheels as artifact
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist
    - name: Upload docs as artifact
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: pi_waveshare_adc_output/docs
    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: dist/*
        draft: true

  docs:
    needs: artifacts
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: docs
        path: doc/build/html
    - name: gh-pages upload
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cp -r doc/build/html ~/docs_temp

        git config --global user.email "moiein2000@gmail.com"
        git config --global user.name "Matthew Einhorn"
        git remote rm origin || true
        git remote add origin "https://x-access-token:${GITHUB_TOKEN}@github.com/matham/pi_waveshare_adc.git"

        git checkout --orphan gh-pages
        cp -r .git ~/docs_git
        cd ..
        rm -rf pi_waveshare_adc
        mkdir pi_waveshare_adc
        cd pi_waveshare_adc
        cp -r ~/docs_git .git
        cp -r ~/docs_temp/* .
        touch .nojekyll

        git add .
        git commit -a -m "Docs for git-$GITHUB_SHA"
        git push origin gh-pages -f
